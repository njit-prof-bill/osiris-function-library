syntax = "proto3";

package core_management;

// API 1 : addFunctionToLibrary
// Request message for adding a function
message AddFunctionRequest {
    string function_name = 1;
    string code = 2;
    string runtime_env = 3;
    string version = 4;
}

// Response message for adding a function
message AddFunctionResponse {
    bool success = 1;
    string message = 2; // Make sure this line exists
}


// Request message for publish/unpublish a function 
message PublishFunctionRequest {
    string function_name = 1;
}

// Response message for publish/unpublish a function
message PublishFunctionResponse {
    bool success = 1;
    string message = 2;
}

// API 10
message ArchiveFunctionRequest {
    string function_name = 1;
}

// Response message for adding a function
message ArchiveFunctionResponse {
    bool success = 1;
    string message = 2;
}

// Request message for rollback function version
message RollbackFunctionVersionRequest {
    string function_name = 1;
    string target_version = 2;
}

// Response message for rollback function version
message RollbackFunctionVersionResponse {
    bool success = 1;
    string message = 2;
}

// API 7
// Request and response for searching functions by runtime
message SearchFunctionByRuntimeRequest {
    string runtime = 1;  // The runtime environment to search for (e.g., Python 3.8, Node.js)
}

message FunctionDetails {
    string function_name = 1;  // The name of the function
    string version = 2;        // The version of the function
}

message SearchFunctionByRuntimeResponse {
    repeated FunctionDetails functions = 1;  // List of functions that match the specified runtime
}


// Service definition
service CoreManagement {
    rpc AddFunction(AddFunctionRequest) returns (AddFunctionResponse);
    rpc PublishFunction(PublishFunctionRequest) returns (PublishFunctionResponse);
    rpc UnpublishFunction(PublishFunctionRequest) returns (PublishFunctionResponse);
    rpc ArchiveFunction(ArchiveFunctionRequest) returns (ArchiveFunctionResponse);
    rpc RollbackFunctionVersion(RollbackFunctionVersionRequest) returns (RollbackFunctionVersionResponse); // Add this line if missing
    rpc SearchFunctionByRuntime(SearchFunctionByRuntimeRequest) returns (SearchFunctionByRuntimeResponse); // Add this line

}
